# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  pyinstaller-windows:
    name: Create Windows Package
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Create executable
        uses: addnab/docker-run-action@v3
        with:
          image: cdrx/pyinstaller-windows
          options: -v ${{ github.workspace }}:/src
          shell: bash
          run: |
            cd /src
            pyinstaller --clean -F --onefile --name="schedule-obs" schedule-obs.py
            cp .env.SAMPLE dist/.env
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Windows-Version
          path: |
            dist
            !dist/**/*.md
  
  pyinstaller-linux:
    name: Create Linux Package
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Create executable
        uses: addnab/docker-run-action@v3
        with:
          image: cdrx/pyinstaller-linux
          options: -v ${{ github.workspace }}:/src
          shell: bash
          run: |
            /entrypoint.sh
            cd /src
            pyinstaller --clean -F --onefile --name="schedule-obs" schedule-obs.py
            cp .env.SAMPLE dist/.env
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Linux-Version
          path: |
            dist
            !dist/**/*.md
            
  pyinstaller-mac:
    name: Create Mac Package
    runs-on: macos-11
    steps:
      - name: icu
        run: |
          brew update --preinstall
          brew install pkg-config icu4c
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: run builder
        run: |
          export PATH="/usr/local/opt/icu4c/bin:/usr/local/opt/icu4c/sbin:${PATH}"
          export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:/usr/local/opt/icu4c/lib/pkgconfig"
          pip install pyinstaller
          pyinstaller --windowed  --clean -F --onefile --name="schedule-obs" schedule-obs.py
          cp .env.SAMPLE dist/.env
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Mac-Version
          path: |
            dist
            !dist/**/*.md
